{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/dashboard/dashboard.component.ts","./src/app/components/dashboard/dashboard.component.html","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/components/profile/profile.component.ts","./src/app/components/profile/profile.component.html","./src/app/components/register/register.component.ts","./src/app/components/register/register.component.html","./src/app/guards/auth.guard.ts","./src/app/services/auth.service.ts","./src/app/services/validate.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'frontend';\n}\n","<app-navbar></app-navbar>\n<div class=\"container\">\n  <flash-messages></flash-messages>\n  <router-outlet></router-outlet>\n</div>\n","import { AuthGuard } from './guards/auth.guard';\nimport { AuthService } from './services/auth.service';\nimport { ValidateService } from './services/validate.service';\nimport { RouterModule, Routes } from '@angular/router';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport{FlashMessagesModule, FlashMessagesService} from 'angular2-flash-messages'\nimport{HttpClientModule} from '@angular/common/http';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\nconst appRoutes:Routes =[\n  {path:'',component:HomeComponent},\n  {path:'register',component:RegisterComponent},\n  {path:'login',component:LoginComponent},\n  {path:'dashboard',component:DashboardComponent,canActivate:[AuthGuard]},\n  {path:'profile',component:ProfileComponent,canActivate:[AuthGuard]}\n]\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    LoginComponent,\n    RegisterComponent,\n    HomeComponent,\n    DashboardComponent,\n    ProfileComponent,\n    ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    FlashMessagesModule,\n    RouterModule.forRoot(appRoutes)\n  ],\n  providers: [\n    ValidateService,\n    FlashMessagesService,\n    AuthService,\n    JwtHelperService,\n    AuthGuard\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h2 class=\"page-header\">Dashboard</h2>\n<p>Welcome to your Dashboard</p>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"jumbotron text-center\">\n    <h1>MEAN Stack Application</h1>\n    <p class=\"lead\" >Developement of MEAN Stack application from scratch</p>\n    <div>\n      <h5>(A Simple Mean Stack Web Application Developement by using HTML, CSS, Angular and TypeScript in Frontend NodeJS, ExpressJS, MongoDB in the backend and Authentication using JSON Web Token)</h5>\n    </div>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  userName:String;\n  password:String;\n\n  constructor(\n    private flashMessage:FlashMessagesService,\n    private AuthService:AuthService,\n    private router:Router,\n  ) { }\n\n  ngOnInit(): void {\n  }\n  onLoginSubmit(){\n    const user={\n      userName:this.userName,\n      password:this.password\n    }\n    this.AuthService.authenticateUser(user).subscribe(data =>{\n      console.log(typeof data.success)\n      if(!data.success){\n        this.flashMessage.show('Invalid userName or password',{cssClass:\"alert-danger\",timeout:3000}) \n        this.router.navigate(['/login'])\n      }else{\n        this.AuthService.storeUserData(data.token,data.user);\n        this.flashMessage.show('Login Successful',{cssClass:\"alert-success\",timeout:3000}) \n        this.router.navigate(['/dashboard'])\n      }\n    })\n  }\n}\n","<div class=\"container\" >\n<form class=\"form-signin\" (submit)=\"onLoginSubmit()\">\n<h2 class=\"page-header\">User Login</h2>\n        <div class=\"form-group\">\n          <label for=\"Username\">Username</label>\n          <input type=\"text\" class=\"form-control\" placeholder=\"Enter Username\" [(ngModel)]=\"userName\" name=\"username\">\n        </div>\n        <div class=\"form-group\" col-md-4>\n        <label for=\"Password\">Password</label>\n        <input type=\"password\" class=\"form-control\" placeholder=\" Enter Password\" [(ngModel)]=\"password\" name=\"password\">\n        </div>\n        <div class=\"checkbox\">\n          <label>\n            <input type=\"checkbox\" value=\"remember-me\"> Remember me\n          </label>\n        </div>\n        <input class=\"btn btn-primary\" type=\"submit\" value=\"Login\">\n</form>\n</div>","import { AuthService } from './../../services/auth.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(\n   public AuthService:AuthService,\n   private router: Router,\n   private flashMessage:FlashMessagesService\n  ) { }\n\n  ngOnInit(): void {\n  }\n  onlogout(){\n    this.AuthService.logout();\n    this.flashMessage.show('you have been logged out',{cssClass:\"alert-success\",timeout:3000}) \n    this.router.navigate(['/login'])\n    }\n   }\n","<div class=\"class=\"container>\n<nav class=\"navbar navbar-default\">\n    <div class=\"container\">\n      <div class=\"navbar-header\">\n        <button type=\"button\" class=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#navbar\" aria-expanded=\"false\" aria-controls=\"navbar\">\n          <span class=\"sr-only\">Toggle navigation</span>\n          <span class=\"icon-bar\"></span>\n          <span class=\"icon-bar\"></span>\n          <span class=\"icon-bar\"></span>\n        </button>\n        <a class=\"navbar-brand\" href=\"#\">MEAN App</a>\n      </div>\n      <div id=\"navbar\" class=\"collapse navbar-collapse\">\n        <ul class=\"nav navbar-nav navbar-left\">\n          <li [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact:true}\"><a [routerLink]=\"['/']\" style=\"color:yellow\">Home</a></li>\n        </ul>\n        <ul class=\"nav navbar-nav navbar-right\">\n          <li *ngIf=\"!AuthService.loggedIn()\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact:true}\"><a [routerLink]=\"['/dashboard']\">Dasboard</a></li>\n          <li *ngIf=\"!AuthService.loggedIn()\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact:true}\"><a [routerLink]=\"['/profile']\">Profile</a></li>\n            <li *ngIf=\"AuthService.loggedIn()\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact:true}\"><a [routerLink]=\"['/register']\" style=\"color:yellow\">Register</a></li>\n            <li *ngIf=\"AuthService.loggedIn()\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact:true}\"><a [routerLink]=\"['/login']\" style=\"color:yellow\">Login</a></li>\n            <li><a *ngIf=\"!AuthService.loggedIn()\" style=\"color:red\" (click)=\"onlogout()\">Logout</a></li>\n          </ul>\n      </div><!--/.nav-collapse -->\n    </div>\n</nav>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './../../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\nuser:any;\n  constructor(\n    private AuthService:AuthService,\n   private router: Router,\n  ) { }\n\n  ngOnInit(): void {\n    this.AuthService.getProfile().subscribe(data=>{\n      this.user=data.user\n    },\n    err=>{\n      console.log(err);\n      return false;\n    })\n  }\n}\n","<div *ngIf=\"user\">\n    <h2 class=\"page-header\">{{user.name}}</h2>\n    <ul class=\"list-group\">\n      <li class=\"list-group-item\">Username : {{user.userName}}</li>\n      <li class=\"list-group-item\">Email : {{user.email}}</li>\n    </ul>\n  </div>","import { Router } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\nimport { ValidateService } from 'src/app/services/validate.service';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  name:String;\n  userName:String;\n  email:String;\n  password:String;\n\n  constructor(\n    private ValidateService:ValidateService,\n    private flashMessage:FlashMessagesService,\n    private AuthService:AuthService,\n    private router:Router,\n  ) { }\n\n  ngOnInit(): void {\n  }\n  onRegisterSubmit(){\n    const user={\n      name:this.name,\n      email:this.email,\n      userName:this.userName,\n      password:this.password\n    }\n    if(!this.ValidateService.validateRegister(user)){\n      this.flashMessage.show('please fill all the fields',{cssClass:\"alert-danger\",timeout:3000})\n      return false\n    }\n    if(!this.ValidateService.validateEmail(user.email)){\n      this.flashMessage.show('email Id is not valid',{cssClass:\"alert-danger\",timeout:3000})\n      return false\n    }\n    this.AuthService.registerUser(user).subscribe(data => {\n      if(data.success){\n        this.flashMessage.show('Registration successful',{cssClass:\"alert-success\",timeout:3000})\n        this.router.navigate(['/login'])\n      }else{\n        this.flashMessage.show('Something went wrong',{cssClass:\"alert-danger\",timeout:3000}) \n        this.router.navigate(['/register'])\n\n      }\n    })\n}\n}","<div class=\"container\" >\n  <form (submit)=\"onRegisterSubmit()\" >\n    <h2 class=\"page-header\">User Registion </h2>\n      <div class=\"form-group\">\n        <label for=\"name\">Name</label>\n        <input type=\"text\" [(ngModel)]=\"name\" name=\"name\" class=\"form-control\" id=\"name\" placeholder=\"Enter Name\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"username\">User Name</label>\n        <input type=\"text\" [(ngModel)]=\"userName\" name=\"userName\" class=\"form-control\" id=\"userName\" placeholder=\"Enter Username\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"email\">Email</label>\n        <input type=\"email\" [(ngModel)]=\"email\" name=\"email\" class=\"form-control\" id=\"email\" aria-describedby=\"emailHelp\" placeholder=\"Enter Email\">\n        <small id=\"emailHelp\" class=\"form-text text-muted\">We'll never share your email with anyone else.</small>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"password\">Password</label>\n        <input type=\"password\" [(ngModel)]=\"password\" name=\"password\" class=\"form-control\" id=\"password\" placeholder=\" Enter Password\">\n      </div>\n      <input type=\"submit\" class=\"btn btn-primary\" value=\"Submit\">\n    </form>\n    </div>","import { AuthService } from '../services/auth.service'\r\nimport { Router,CanActivate } from '@angular/router';\r\nimport{Injectable} from '@angular/core';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate{\r\n    constructor(\r\n        private AuthService:AuthService,\r\n        private router: Router\r\n        ){}\r\n\r\n        canActivate(){\r\n            if(!this.AuthService.loggedIn()){\r\n                return true;\r\n            }else{\r\n                this.router.navigate(['/login']);\r\n                return false;\r\n            }\r\n        }\r\n    }","import { Injectable } from '@angular/core';\nimport {HttpClient,HttpHeaders} from '@angular/common/http';\nimport {Observable} from 'rxjs'\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\nconst httpOptions = {headers: new HttpHeaders({'Content-Type':  'application/json'})};\nconst helper = new JwtHelperService();\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  authToken: any;\n  user: any;\n\n  constructor(\n    private http: HttpClient\n    ) { }\n  registerUser(user: any):Observable<any>{\n    return this.http.post('http://localhost:3000/users/register', user, httpOptions)\n  }\n\n  authenticateUser(user: any):Observable<any>{\n    return this.http.post('http://localhost:3000/users/authenticate', user, httpOptions) }\n\n  getProfile():Observable<any>{\n    this.loadToken();\n    let authheader= new HttpHeaders\n    ({'Content-Type':  'application/json',\n    'Authorization':this.authToken\n  });\n    return this.http.get('http://localhost:3000/users/profile',{headers:authheader}) \n  }\n\n  storeUserData(token,user){\n  localStorage.setItem('id_token',token)\n  localStorage.setItem('user',JSON.stringify(user))\n  this.authToken=token\n  }\n\n  loadToken(){\n    this.authToken=localStorage.getItem('id_token')\n  }\n\n  loggedIn() {\n    return helper.isTokenExpired(localStorage.getItem('id_token'));\n  }\n\n  logout(){\n  this.authToken=null,\n  this.user=null,\n  localStorage.clear();\n}\n}","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidateService {\n\n  constructor() { }\n\n  validateRegister(user){\n    if(user.name===undefined|| user.email===undefined||user.userName===undefined||user.password===undefined)\n      return false\n    else \n      return true\n  }\n  validateEmail(email){\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}